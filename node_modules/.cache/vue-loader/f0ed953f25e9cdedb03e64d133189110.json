{"remainingRequest":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/src/components/Filters.vue?vue&type=template&id=61dd607b&","dependencies":[{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/src/components/Filters.vue","mtime":1575773365764},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}