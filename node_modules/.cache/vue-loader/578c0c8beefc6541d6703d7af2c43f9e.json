{"remainingRequest":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/src/components/TimelineView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/src/components/TimelineView.vue","mtime":1576013390508},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xueyangxin/Documents/GT_19_Fall/InfoVis/InfoVis_Proj/artists-vis-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TimelineView.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TimelineView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"timeline\">\n        <div id=\"myModal\" class=\"modal\">\n\t\t\t<div class=\"modal-content\">\n\t\t\t</div>\n\t\t</div>\n        <svg class=\"timeline-svg\">\n        </svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nimport eventHub from '@/eventHub'\n\nexport default {\n    data() {\n        return {\n            showingData: [],\n            artists_list: ['All'],\n            paintingYear: [],\n            genre: '',\n            country: '',\n            colorAmount: [],\n            intensity: [],\n            colorTheory: '',\n            artist_info: [],\n            partialData: [],\n            showinghslData: []\n        }\n    },\n    mounted() {\n        this.fetchData();\n\n        var self = this;\n        eventHub.$on('artistChanged', (artist_value) => {\n            if (artist_value.length != 0) {\n                self.artists_list = artist_value;\n            } else {\n                self.artists_list = [];\n            }\n            this.updateChartByFilter();\n        }),\n        eventHub.$on('genreChanged', (genre_value) => {\n            self.genre = genre_value;\n            this.updateChartByFilter();\n        }),\n        eventHub.$on('colorAmountChanged', (colorAmount) => {\n            self.colorAmount = colorAmount;\n            this.updateChartByFilter();\n        }),\n        eventHub.$on('paintingYearChanged', (paintingYear) => {\n            self.paintingYear = paintingYear;\n            this.updateChartByFilter();\n        }),\n        eventHub.$on('countryChanged', (country) => {\n            self.country = country;\n            this.updateChartByFilter();\n        }),\n        eventHub.$on('intensityChanged', (intensity) => {\n            self.intensity = intensity;\n            this.updateChartByFilter();\n        }),\n        eventHub.$on('colorTheoryChanged', (colorTheory) => {\n            self.colorTheory = colorTheory;\n            this.updateChartByFilter();\n        }),\n        eventHub.$on('reset', (retValue) => {\n            self.artists_list = retValue['artist'];\n            self.genre = retValue['genre'];\n            self.colorTheory = retValue['theory'];\n            self.intensity = retValue['intensity'];\n            self.country = retValue['country'];\n            self.paintingYear = retValue['year'];\n            self.colorAmount = retValue['amount'];\n            this.updateChartByFilter();\n        })\n    },\n    created() {\n        eventHub.$emit('viewChanged', 'timeline-view');\n\t},\n    methods: {\n        async fetchData() {\n            let data = await d3.csv('pics_info_final.csv');\n            let artist_data = await d3.csv('artists_info_final.csv');\n            this.showingData = data.filter(d => !isNaN(parseInt(d['year_of_pic'])));\n            let hsldata = await d3.csv('color_info_kmeans_final_hsv_360.csv');\n\t\t\tthis.allData = data;\n            this.artist_info = artist_data;\n            this.showinghslData = hsldata;\n            // console.log(this.showingData);\n            this.renderChart();\n        },\n        renderChart() {\n            const svgWidth = 1000;\n            const svgHeight = 750;\n            const margin = {\n                top: 20,\n                right: 30,\n                bottom: 30,\n                left: 50\n            };\n            const timeBarHeight = 20;\n            this.width = svgWidth - margin.left - margin.right;\n            this.height = svgHeight - margin.top - margin.bottom - timeBarHeight;\n            const timeBarWidth = 420;\n            const padding_top = 40;\n            const padding_left = 280;\n            this.rect_height = 4;\n            this.rect_width = 4;\n            const margin_padding_top_1 = -70;\n            const margin_padding_top_2 = -60;\n\n            this.svg = d3.select('.timeline-svg')\n                .attr('height', svgHeight)\n                .attr('width', svgWidth);\n\n            this.chartG = this.svg.append('g')\n                .attr('transform', 'translate(' + margin.left + ',' + (margin.top + margin_padding_top_1) + ')');\n\n            var timeBar = this.svg.append('g')\n                .attr('width', timeBarWidth)\n                .attr('height', timeBarHeight)\n                .attr('transform', 'translate(' + (margin.left + padding_left) + ',' + (margin.top + this.height + padding_top + margin_padding_top_2) + ')');\n\n            var minYear = d3.min(this.showingData, function(d) {\n                return Number(d.year_of_pic)\n            });\n            var maxYear = d3.max(this.showingData, function(d) {\n                return Number(d.year_of_pic)\n            });\n\n            this.timeScale = d3.scaleLinear().domain([minYear, maxYear]).range([0, timeBarWidth]);\n             this.timeAxis = d3.axisTop(this.timeScale).tickFormat(d3.format(\"d\"));\n\n            this.xScale = d3.scaleLinear().domain([1267,1987]).range([0, this.width]);\n            this.yScale = d3.scaleLinear().domain([140, 0]).range([0, this.height]);\n\n            timeBar.append('g')\n                .attr('class', 'axis')\n                .attr('transform', 'translate(0,' + 20 + ')')\n                .call(this.timeAxis)\n                .style('color','#fff')\n                .style('opacity','0.7')\n                .call(g => g.select(\".domain\").remove());\n\n            timeBar.append('rect')\n                .attr('width', timeBarWidth)\n                .attr('height', timeBarHeight)\n                .attr('x', 0)\n                .attr('y', margin.top)\n                .style('fill', '#ffffff')\n                .style('opacity','0.8');\n\n            var brush = d3.brushX()\n                .extent([[0, 0], [timeBarWidth, timeBarHeight]])\n                .on(\"start brush end\", this.brushed);\n\n            var gBrush = timeBar.append('g')\n                .attr('transform', 'translate(0,' + margin.top + ')')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, this.timeScale.range());\n\n            gBrush.selectAll('.handle')\n                .attr('height', 26)\n                .attr('width', 6)\n                .style('fill', '#ffffff');\n       \n            gBrush.selectAll('.selection')\n                .style('fill','#fc766a')\n                .style('fill-opacity','1')\n                .style('stroke','#fc766a');\n\n            // console.log(gBrush.selectAll('.handle'));\n\n            this.xAxis = this.chartG.append('g')\n                .attr('class', 'axis')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .style('color', '#fff')\n                .style('opacity','0.7');\n\n            this.chartG.append('g')\n                .attr('class', 'gridline')\n                .call(this.make_y_gridlines()\n                    .tickSize(this.width))\n                .call(g => g.select(\".domain\").remove())\n                .style('color','#fff')\n                .style('opacity','0.2');\n\n            this.chartG.append('text')\n                .attr('class', 'x label')\n                .attr('transform', 'translate(-35,' + (this.height + 5) + ')')\n                .text('Year')\n                .style('fill', '#fff')\n                .style('font-size', \"12px\");\n\n            this.chartG.append('text')\n                .attr('class', 'y label')\n                .attr('transform', 'translate(' + (this.width - 35) + ',' + 60 + ')')\n                .text('Painting')\n                .style('fill', '#fff')\n                .style('font-size', \"12px\");\n\n            this.chartG.append('text')\n                .attr('class', 'y label')\n                .attr('transform', 'translate(' + (this.width - 35) + ',' + 72 + ')')\n                .text('Amount')\n                .style('fill', '#fff')\n                .style('font-size', \"12px\");\n\n            timeBar.append('text')\n                .attr('class', 'scroll-tip')\n                .attr('transform', 'translate(' + 60 + ',' + 60 + ')')\n                .text('You can drag handles and the bar to adjust the view')\n                .style('fill', '#fff')\n                .style('font-size', \"12px\");\n\n            var yArray = [];\n            var yCnt = [];\n\n            for (var i = minYear; i <= maxYear; i++) {\n                yArray.push(0);\n                yCnt.push(0);\n            }\n\n            var self = this;\n\n            this.showingData.forEach(function(d) {\n                d.y = yArray[Number(d.year_of_pic) - minYear] * self.rect_height + yCnt[Number(d.year_of_pic) - minYear];\n                yArray[Number(d.year_of_pic) - minYear] += 1;\n                yCnt[Number(d.year_of_pic) - minYear] += 1;\n            });\n\n            var line_length = 16;\n            var line_color = 'white'\n\n            for (i = 0; i < this.artist_info.length; i++) {\n                var artist = this.artist_info[i];\n                var name = artist['name'].split(' ').join('-');\n                var year_of_birth = artist['year_of_birth'];\n                var year_of_death = artist['year_of_death'];\n                // console.log(name, year_of_birth, year_of_death);\n\n                var g = this.chartG.append('g')\n                    .attr('class', 'g-bd-' + name)\n                    .attr('transform', 'translate(0,' + this.height + ')');\n\n                var x1 = this.xScale(year_of_birth);\n                var x2 = this.xScale(year_of_death);\n                // console.log(x1, x2);\n                g.append('line')\n                    .attr('class', 'line-b-' + name)\n                    .attr('x1', x1)\n                    .attr('y1', 0)\n                    .attr('x2', x1)\n                    .attr('y2', line_length)\n                    .style('stroke', line_color)\n                    .attr('transform', 'translate(' + 0 + ',0)')\n                    .style('opacity', 0);\n\n                g.append('circle')\n                    .attr('class', 'circle-b-' + name)\n                    .attr('r', 5)\n                    .attr('cx', x1)\n                    .attr('cy', line_length)\n                    .style('fill', line_color)\n                    .style('opacity', 0);\n\n                g.append('text')\n                    .attr('class', 'text-b-' + name)\n                    .attr('x', x1 - 12)\n                    .attr('y', line_length + 15)\n                    .text('b.' + year_of_birth)\n                    .attr('font-size', '8px')\n                    .style('fill', line_color)\n                    .style('opacity', 0);\n\n\n                g.append('line')\n                    .attr('class', 'line-d-' + name)\n                    .attr('x1', x2)\n                    .attr('y1', 0)\n                    .attr('x2', x2)\n                    .attr('y2', line_length)\n                    .style('stroke', line_color)\n                    .attr('transform', 'translate(' + 0 + ',0)')\n                    .style('opacity', 0);\n\n                g.append('circle')\n                    .attr('class', 'circle-d-' + name)\n                    .attr('r', 5)\n                    .attr('cx', x2)\n                    .attr('cy', line_length)\n                    .style('fill', line_color)\n                    .style('opacity', 0);\n\n                g.append('text')\n                    .attr('class', 'text-d-' + name)\n                    .attr('x', x2 - 12)\n                    .attr('y', line_length + 15)\n                    .text('d.' + year_of_death)\n                    .attr('font-size', '8px')\n                    .style('fill', line_color)\n                    .style('opacity', 0);\n\n            }\n\n            this.updateChartByYear(minYear, maxYear);\n        },\n\n        updateChartByYear(arg_minYear, arg_maxYear) {\n            var modal = document.getElementById(\"myModal\");\n\t\t\t// var content = document.getElementsByClassName(\"modal-content\");\n\t\t\tvar selected = [];\n\t\t\t\t\n\t\t\td3.select(\".modal-content\").append(\"svg\")\n\t\t\t\t.attr(\"id\", \"detailsvg\")\n\t\t\t\t.attr('width', '100%')\n\t\t\t\t.attr('height', '100%');\n\t\t\t\t\n\t\t\td3.selection.prototype.moveToFront = function() {\n\t\t\t  return this.each(function(){\n\t\t\t  this.parentNode.appendChild(this);\n\t\t\t  });\n\t\t\t};\n\n\t\t\twindow.onclick = function(event) {\n\t\t\t  if (event.target == modal) {\n\t\t\t\t// modal.style.paddingTop = \"0px\";\n\t\t\t\tmodal.style.display = \"none\";\n\t\t\t  }\n\t\t\t}\n\t\t\tvar curr = this;\n\t\t\tfunction handleClick(d,i) {\n\t\t\t\tmodal.style.display = \"block\";\n\t\t\t\tselected = d;\n\t\t\t\tcurr.renderDetail(selected);\n            }\n            \n            var filteredData = this.showingData.filter(d => !isNaN(parseInt(d['year_of_pic'])) && Number(d['year_of_pic']) >= arg_minYear && Number(d['year_of_pic']) <= arg_maxYear);\n\n            this.xScale.domain([arg_minYear, arg_maxYear]);\n\n            var pics_remove = this.chartG.selectAll('rect')\n                .data([]);\n            pics_remove.exit().remove();\n            var pics = this.chartG.selectAll('rect')\n                .data(filteredData, function(d) {\n                    return d.filename;\n                });\n            pics.exit().remove();\n\n            var self = this;\n            var picsEnter = pics.enter()\n                .append('rect')\n                .attr('class', 'pics')\n                .attr('x', function(d) {\n                    return self.xScale(Number(d.year_of_pic));\n                })\n                .attr('y', function(d) {\n                    return self.height - 5 - d.y;\n                })\n                .attr('width', this.rect_width)\n                .attr('height', this.rect_height)\n                .style('fill', function(d) {\n                    var color1 = d['color1'].split(':')[0];\n                    // console.log(color1);\n                    return color1;\n                })\n                .on(\"click\", handleClick);\n\n            picsEnter.style(\"cursor\", \"pointer\")\n                .on('mouseover', function(d) {\n                    var hovered = d3.select(this);\n                    hovered.attr('width', 6)\n                        .attr('height', 6);\n                    if (hovered.style('fill-opacity') == 1) {\n                        eventHub.$emit('previewPic', d);\n                    }\n                })\n                .on('mouseout', function() {\n                    var hovered = d3.select(this);\n                    hovered.attr('width', self.rect_width)\n                        .attr('height', self.rect_height);\n                });\n\n\n            pics.merge(picsEnter)\n                .transition()\n                .duration(0);\n\n            this.xAxis.call(d3.axisBottom(this.xScale).tickFormat(d3.format(\"d\")));\n\n            eventHub.$emit('picAmountChanged', filteredData.length);\n        },\n        brushed() {\n            if (!d3.event.sourceEvent) return; // ignore brush-by-zoom\n            if (!d3.event.selection) return; // Ignore empty selections.\n            var s = d3.event.selection || this.timeScale.range();\n            var newScale = s.map(this.timeScale.invert, this.timeScale);\n            this.updateChartByYear(newScale[0], newScale[1]);\n        },\n        make_y_gridlines() {\n            return d3.axisRight(this.yScale);\n        },\n\n        clearBDInfo() {\n            for (var i = 0; i < this.artist_info.length; i++) {\n                var artist = this.artist_info[i];\n                var name = artist['name'].split(' ').join('-');\n                this.chartG.select('.circle-b-' + name)\n                    .style('opacity', 0);\n\n                this.chartG.select('.line-b-' + name)\n                    .style('opacity', 0);\n                \n                this.chartG.select('.text-b-' + name)\n                    .style('opacity', 0);\n\n                this.chartG.select('.circle-d-' + name)\n                    .style('opacity', 0);\n\n                this.chartG.select('.line-d-' + name)\n                    .style('opacity', 0);\n                \n                this.chartG.select('.text-d-' + name)\n                    .style('opacity', 0);\n            }\n        },\n\n        updateChartByFilter() {\n            // var minYear = d3.min(this.showingData, function(d) {\n            //     return Number(d.year_of_pic)\n            // });\n            // var maxYear = d3.max(this.showingData, function(d) {\n            //     return Number(d.year_of_pic)\n            // });\n            this.clearBDInfo();\n            var minYear = 1267;\n            var maxYear = 1987;\n            this.updateChartByYear(minYear, maxYear);\n            this.chartG.selectAll('rect').style('fill-opacity', 0.05).style('pointer-events', 'none');\n\n            var self = this;\n\n            var filteredData = [];\n            if (this.artists_list.length == 1 && this.artists_list[0] == 'All') {\n                filteredData = this.showingData;\n            } else {\n                filteredData = this.showingData.filter(d => self.artists_list.includes(d['artist_name']));\n\n                if (this.artists_list.length == 1) {\n                    var name = self.artists_list[0].split(' ').join('-');\n                    // console.log('circle-b-' + name);\n                    \n                    this.chartG.select('.circle-b-' + name)\n                        .style('opacity', 1);\n\n                    this.chartG.select('.line-b-' + name)\n                        .style('opacity', 1);\n                    \n                    this.chartG.select('.text-b-' + name)\n                        .style('opacity', 1);\n\n                    this.chartG.select('.circle-d-' + name)\n                        .style('opacity', 1);\n\n                    this.chartG.select('.line-d-' + name)\n                        .style('opacity', 1);\n                    \n                    this.chartG.select('.text-d-' + name)\n                        .style('opacity', 1);\n                }\n            }\n\n            if (this.paintingYear.length != 0) {\n                filteredData = filteredData.filter(d => d['year_of_pic'] >= Number(self.paintingYear[0]) && d['year_of_pic'] <= Number(self.paintingYear[1]));\n            }\n\n            if (this.genre != '') {\n                filteredData = filteredData.filter(d => d['genre'].split(',').includes(self.genre));\n            }\n\n            if (this.country != '') {\n                filteredData = filteredData.filter(d => d['nationality'] == self.country);\n            }\n\n            if (this.colorAmount.length != 0) {\n                filteredData = filteredData.filter(d => d['amount_of_main_color'] >= Number(self.colorAmount[0]) && d['amount_of_main_color'] <= Number(self.colorAmount[1]));\n            }\n\n            if (this.intensity.length != 0) {\n                filteredData = filteredData.filter(d => d['color_intensity'] * 100 >= Number(self.intensity[0]) && d['color_intensity'] * 100 <= Number(self.intensity[1]));\n            }\n\n            if (this.colorTheory != '') {\n                filteredData = filteredData.filter(d => d['color_theory_tag'].split(',').includes(self.colorTheory));\n            }\n\n            var pics = this.chartG.selectAll('rect')\n                .data(filteredData, function(d) {\n                    return d.filename;\n                });\n            pics.style('fill-opacity', 1).style('pointer-events', 'auto');\n\n            eventHub.$emit('picAmountChanged', filteredData.length);\n        },\n\n        wrap(text, width) {\n\t\t\ttext.each(function() {\n\t\t\t\tvar text = d3.select(this),\n\t\t\t\t\twords = text.text().split(/\\s+/).reverse(),\n\t\t\t\t\tword,\n\t\t\t\t\tline = [],\n\t\t\t\t\tlineNumber = 0,\n\t\t\t\t\tlineHeight = 1.1, // ems\n\t\t\t\t\ty = text.attr(\"y\"),\n\t\t\t\t\tdy = parseFloat(text.attr(\"dy\"));\n\t\t\t\t\tvar tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\t\t\t\twhile (word = words.pop()) {\n\t\t\t\t  line.push(word);\n\t\t\t\t  tspan.text(line.join(\" \"));\n\t\t\t\t  if (tspan.node().getComputedTextLength() > width) {\n\t\t\t\t\tline.pop();\n\t\t\t\t\ttspan.text(line.join(\" \"));\n\t\t\t\t\tline = [word];\n\t\t\t\t\t++lineNumber;\n\t\t\t\t\ttspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + dy + \"em\").text(word);\n\t\t\t\t  }\n\t\t\t\t}\n\t\t\t});\n        },\n        \n        renderDetail(selected) {\n\t\t\tvar detailsvg = d3.select(\"#detailsvg\");\n\t\t\tvar wid = parseFloat(detailsvg.style(\"width\").slice(0, -2));\n\t\t\tvar hei = parseFloat(detailsvg.style(\"height\").slice(0, -2));\n\t\t\tvar allData = this.showinghslData;\n\t\t\tvar pData = this.allData;\n\t\t\tvar artist_info = this.artist_info;\n\t\t\tvar modal = document.getElementById(\"myModal\");\n\t\t\tvar content = document.getElementsByClassName(\"modal-content\");\n\t\t\tvar percent = 0;\n\n\t\t\tvar prev = 0;\n\t\t\tfor (var i = 1; i < 11; i++) {\n\t\t\t\tvar str = selected['color'+i.toString()];\n\t\t\t\tvar percent = parseFloat(str.split(\":\")[1]);\n\t\t\t\tvar per = percent*100;\n\t\t\t\tconst ind = i;\n\t\t\t\tvar widthper = Math.ceil(wid*percent);\n\t\t\t\tvar rectx = prev;\n\t\t\t\tif(i > 4){\n\t\t\t\t\trectx = rectx - 150;\n\t\t\t\t}\n\t\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t\t.attr(\"width\", widthper+1)\n\t\t\t\t\t.attr(\"height\", hei)\n\t\t\t\t\t.attr('x', prev)\n\t\t\t\t\t.attr('y', 0)\n\t\t\t\t\t.attr('fill', str.slice(0, 7))\n\t\t\t\t\t.on('mouseover', function(d){\n\t\t\t\t\t\tconsole.log(\"#t\".concat(ind.toString()));\n\t\t\t\t\t\td3.selectAll(\"#t\".concat(ind.toString())).style(\"opacity\",1);\n\t\t\t\t\t})\n\t\t\t\t\t.on('mouseout', function(d){\n\t\t\t\t\t\td3.selectAll(\"#t\".concat(ind.toString())).style(\"opacity\",0);\n\t\t\t\t\t});\n\t\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t\t.attr(\"id\", \"t\".concat(ind.toString()))\n\t\t\t\t\t.attr(\"width\", 140)\n\t\t\t\t\t.attr(\"height\", 30)\n\t\t\t\t\t.attr('x', rectx+20)\n\t\t\t\t\t.attr('y', 700)\n\t\t\t\t\t.attr('fill', '#2e2e2e')\n\t\t\t\t\t.attr(\"rx\",2)\n\t\t\t\t\t.attr(\"ry\",2)\n\t\t\t\t\t.style(\"opacity\", 0);\n\t\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t\t.attr(\"id\", \"t\".concat(ind.toString()))\n\t\t\t\t\t.attr('x', rectx+24)\n\t\t\t\t\t.attr('y', 720)\n\t\t\t\t\t.attr('fill', 'white')\n\t\t\t\t\t.style(\"font\", \"18px roboto\")\n\t\t\t\t\t.style(\"opacity\", 0)\n\t\t\t\t\t.text(str.split(\":\")[0].concat(\" | \", per.toString().slice(0,4),\"%\"));\n\t\t\t\tprev = prev + widthper;\n\t\t\t}\n\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t.attr(\"width\", 38)\n\t\t\t\t.attr(\"height\", 38)\n\t\t\t\t.attr('transform', 'translate('+[1320, 30]+')')\n\t\t\t\t.attr('fill', \"rgba(255, 255, 255, 0.2)\");\n\t\t\tdetailsvg.append(\"svg:image\")\n\t\t\t\t.attr('id','close')\n\t\t\t\t.attr('transform', 'translate('+[1325, 35]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.attr(\"width\", \"28px\")\n\t\t\t\t.attr(\"height\", \"28px\")\n\t\t\t\t\t// .style('width', \"28px\")\n\t\t\t\t\t// .style('height', \"28px\")\n\t\t\t\t.style(\"font\", \"20px roboto\")\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.on(\"click\", function() {\n\t\t\t\t\tmodal.style.display = \"none\";\n\t\t\t\t\t// modal.style.paddingTop = \"50px\";\n\t\t\t\t\tdetailsvg.selectAll(\"*\").remove();})\n\t\t\t\t.attr(\"xlink:href\", \"close.png\");\n\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t.attr(\"width\", 820)\n\t\t\t\t.attr(\"height\", 660)\n\t\t\t\t.attr('x', 114)\n\t\t\t\t.attr('y', 30)\n\t\t\t\t.attr('fill', \"rgba(74, 74, 74, 0.1)\");\n\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t.attr(\"width\", 360)\n\t\t\t\t.attr(\"height\", 400)\n\t\t\t\t.attr('x', 934)\n\t\t\t\t.attr('y', 30)\n\t\t\t\t.attr('fill', \"rgba(74, 74, 74, 0.8)\");\n\t\t\tvar barg = detailsvg.append(\"g\")\n\t\t\t\t.attr(\"id\", \"bar\")\n\t\t\t\t.attr('x', 934)\n\t\t\t\t.attr('y', 430);\n\t\t\tbarg.append(\"rect\")\t\t\t\t\t\n\t\t\t\t.attr(\"width\", 360)\n\t\t\t\t.attr(\"height\", 260)\n\t\t\t\t.attr('x', 934)\n\t\t\t\t.attr('y', 430)\n\t\t\t\t.attr('fill', \"rgba(0, 0, 0, 0.7)\");\n\t\t\t//console.log(selected);\n\t\t\tvar paintingimage = detailsvg.append('image')\n\t\t\t\t.attr('xlink:href', 'sampled_images/'.concat(selected.artist_name.split(' ').join('_'),'/',selected.filename))\n\t\t\t\t.attr('width', 820)\n\t\t\t\t.attr('height', 660)\n\t\t\t\t.attr('x', 114)\n\t\t\t\t.attr('y', 30)\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[960, 70]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.attr('dy', '0')\n\t\t\t\t.style(\"font\", \"18px roboto slab\")\n\t\t\t\t.style(\"font-weight\",\"bold\")\n\t\t\t\t.text(selected.name_of_pic)\n\t\t\t\t.call(this.wrap, 320);\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[960, 110]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.style(\"font\", \"14px roboto\")\n\t\t\t\t.text(selected.artist_name.concat(', ',selected.year_of_pic));\n\t\t\t\t\n\t\t\t// thumbmail\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[960, 154]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.style(\"font\", \"14px roboto slab\")\n\t\t\t\t.style(\"font-weight\",\"bold\")\n\t\t\t\t.text('Paintings with Similar Main Color');\n\t\t\tvar piclst = selected.similar_pics.split(',');\n\t\t\tvar picone = piclst[0].split('_');\n\t\t\tvar pictwo = piclst[1].split('_');\n\t\t\tvar picthree = piclst[2].split('_');\n\t\t\tvar objone = pData.find(o => o.filename === piclst[0]);\n\t\t\tvar objtwo = pData.find(o => o.filename === piclst[1]);\n\t\t\tvar objthree = pData.find(o => o.filename === piclst[2]);\n\n\t\t\tpicone.pop();\n\t\t\tpictwo.pop();\n\t\t\tpicthree.pop();\n\t\t\tvar nameone = picone.join('_');\n\t\t\tvar nametwo = pictwo.join('_');\n\t\t\tvar namethree = picthree.join('_');\n\t\t\t\n\t\t\tvar h = 170;\n\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t.attr(\"width\", 100)\n\t\t\t\t.attr(\"height\", 100)\n\t\t\t\t.attr('transform', 'translate('+[955, 165]+')')\n\t\t\t\t.attr('fill', 'rgba(0, 0, 0, 0.7)')\n\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t.attr(\"width\", 100)\n\t\t\t\t.attr(\"height\", 100)\n\t\t\t\t.attr('transform', 'translate('+[1065, 165]+')')\n\t\t\t\t.attr('fill', 'rgba(0, 0, 0, 0.7)')\n\t\t\tdetailsvg.append(\"rect\")\n\t\t\t\t.attr(\"width\", 100)\n\t\t\t\t.attr(\"height\", 100)\n\t\t\t\t.attr('transform', 'translate('+[1175, 165]+')')\n\t\t\t\t.attr('fill', 'rgba(0, 0, 0, 0.7)')\n\t\t\tvar artistimage = detailsvg.append('image')\n\t\t\t\t.attr('xlink:href', 'sampled_images/'.concat(nameone,'/',piclst[0]))\n\t\t\t\t.attr('id', 'picone')\n\t\t\t\t.attr('width', 100)\n\t\t\t\t.attr('height', 100)\n\t\t\t\t.attr('x', 955)\n\t\t\t\t.attr('y', 165)\n\t\t\t\t.on('mouseover', function(d){\n\t\t\t\t\td3.select(\"#picone\").style(\"opacity\",0);\n\t\t\t\t\td3.select(\"#txtone\").style(\"opacity\",1);\n\t\t\t\t})\n\t\t\t\t.on('mouseout', function(d){\n\t\t\t\t\td3.select(\"#picone\").style(\"opacity\",1);\n\t\t\t\t\td3.select(\"#txtone\").style(\"opacity\",0);\n\t\t\t\t});\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[960, 180]+')')\n\t\t\t\t.attr('id', 'txtone')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.attr('dy', '0')\n\t\t\t\t.style(\"font\", \"10px roboto\")\n\t\t\t\t.style('opacity', 0)\n\t\t\t\t.text(objone.name_of_pic)\n\t\t\t\t.call(this.wrap, 92);\n\t\t\tvar artistimage = detailsvg.append('image')\n\t\t\t\t.attr('xlink:href', 'sampled_images/'.concat(nametwo,'/',piclst[1]))\n\t\t\t\t.attr('id', 'pictwo')\n\t\t\t\t.attr('width', 100)\n\t\t\t\t.attr('height', 100)\n\t\t\t\t.attr('x', 1065)\n\t\t\t\t.attr('y', 165)\n\t\t\t\t.on('mouseover', function(d){\n\t\t\t\t\td3.select(\"#pictwo\").style(\"opacity\",0);\n\t\t\t\t\td3.select(\"#txttwo\").style(\"opacity\",1);\n\t\t\t\t})\n\t\t\t\t.on('mouseout', function(d){\n\t\t\t\t\td3.select(\"#pictwo\").style(\"opacity\",1);\n\t\t\t\t\td3.select(\"#txttwo\").style(\"opacity\",0);\n\t\t\t\t});\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('id', 'txttwo')\n\t\t\t\t.attr('transform', 'translate('+[1070, 180]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.attr('dy', '0')\n\t\t\t\t.style(\"font\", \"10px roboto\")\n\t\t\t\t.style('opacity', 0)\n\t\t\t\t.text(objtwo.name_of_pic)\n\t\t\t\t.call(this.wrap, 92);\n\t\t\tvar artistimage = detailsvg.append('image')\n\t\t\t\t.attr('id', 'picthree')\n\t\t\t\t.attr('xlink:href', 'sampled_images/'.concat(namethree,'/',piclst[2]))\n\t\t\t\t.attr('width', 100)\n\t\t\t\t.attr('height', 100)\n\t\t\t\t.attr('x', 1175)\n\t\t\t\t.attr('y', 165)\n\t\t\t\t.on('mouseover', function(d){\n\t\t\t\t\td3.select(\"#picthree\").style(\"opacity\",0);\n\t\t\t\t\td3.select(\"#txtthree\").style(\"opacity\",1);\n\t\t\t\t})\n\t\t\t\t.on('mouseout', function(d){\n\t\t\t\t\td3.select(\"#picthree\").style(\"opacity\",1);\n\t\t\t\t\td3.select(\"#txtthree\").style(\"opacity\",0);\n\t\t\t\t});\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('id', 'txtthree')\n\t\t\t\t.attr('transform', 'translate('+[1180, 180]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.attr('dy', '0')\n\t\t\t\t.style(\"font\", \"10px roboto\")\n\t\t\t\t.style('opacity', 0)\n\t\t\t\t.text(objthree.name_of_pic)\n\t\t\t\t.call(this.wrap, 92);\t\n\t\t\t// Artist Info\n\t\t\tvar artistimage = detailsvg.append('image')\n\t\t\t\t.attr('xlink:href', 'Artists_photo_square/'.concat(selected.id, '_',selected.artist_name.split(' ').join('_'),'.jpg'))\n\t\t\t\t.attr('width', 80)\n\t\t\t\t.attr('height', 80)\n\t\t\t\t.attr('x', 960)\n\t\t\t\t.attr('y', 304);\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[1060, 320]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.style(\"font\", \"18px roboto slab\")\n\t\t\t\t.style(\"font-weight\", \"bold\")\n\t\t\t\t.text(selected.artist_name);\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[1060, 340]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.style(\"font\", \"12px roboto\")\n\t\t\t\t.text(selected.year_of_birth.concat(' ~ ',selected.year_of_death));\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[1060, 360]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.style(\"font\", \"12px roboto\")\n\t\t\t\t.text(selected.nationality);\n\t\t\tvar obj = artist_info.find(o => o.id === selected.id);\n\t\t\t//console.log(obj);\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[1060, 380]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.style(\"font\", \"12px roboto\")\n\t\t\t\t.text(obj.number_of_paintings.concat(' paintings'));\n\t\t\tdetailsvg.append(\"text\")\n\t\t\t\t.attr('transform', 'translate('+[1060, 400]+')')\n\t\t\t\t.attr('fill', 'white')\n\t\t\t\t.attr('dy', 0)\n\t\t\t\t.style(\"font\", \"12px roboto\")\n\t\t\t\t.text(selected.genre.split(',').join(' '))\n\t\t\t\t.call(this.wrap, 120);\n\t\t\t// console.log('-------------');\t\n\t\t\t// console.log(allData);\n\t\t\tvar onedata = allData.filter(function(d){return d.id == selected.id;});\n\t\t\t// console.log(onedata);\n\t\t\tvar harr = []\n\t\t\tvar sarr = []\n\t\t\tvar varr = []\n\t\t\tonedata.forEach(function(d) {\n\t\t\t\tfor (var i = 1; i < 11; i++) {\n\t\t\t\t\tharr.push(d['color'+i.toString()+'-H']);\n\t\t\t\t\tsarr.push(d['color'+i.toString()+'-S']);\n\t\t\t\t\tvarr.push(d['color'+i.toString()+'-V']);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar barw = 250;\n\t\t\tvar barh = 150;\n\t\t\tvar bar = barg.append(\"svg\")\n\t\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"transform\",\n\t\t\t\t  \"translate(\" + 1000 + \",\" + 500 + \")\");\n\n\t\t\tvar x = d3.scaleLinear()\n\t\t\t\t.domain([0, 360])  \n\t\t\t\t.range([0, barw]);\n\t\t\tbar.append(\"g\")\n\t\t\t\t.attr(\"id\",\"x\")\n\t\t\t\t.attr(\"class\", \"axiswhite\")\n\t\t\t\t.attr(\"transform\", \"translate(0,\" + barh + \")\")\n\t\t\t\t.call(d3.axisBottom(x));\n\n\t\t\tvar histogram = d3.histogram()\n\t\t\t\t.value(function(d) { return d; })\n\t\t\t\t.domain(x.domain())\n\t\t\t\t.thresholds(x.ticks(40)); \n\t\t\tvar formatPercent = d3.format(\".0%\");\n\t\t\tvar bins = histogram(harr);\n\t\t\tvar y = d3.scaleLinear()\n\t\t\t\t.range([barh, 0])\n\t\t\t\t.domain([0, d3.max(bins, function(d) { return d.length; })]); \n\t\t\tbar.append(\"g\")\n\t\t\t  .attr(\"class\", \"axiswhite\")\n\t\t\t  .call(d3.axisLeft(y));\n\t\t\tbar.append(\"text\")  \n\t\t\t  .attr(\"class\", \"axis\")\t\t\t\t\n\t\t\t  .attr(\"transform\",\n\t\t\t\t\t\"translate(\" + 120 + \" ,\" + 180 + \")\")\n\t\t\t  .style(\"text-anchor\", \"middle\")\n\t\t\t  .style(\"fill\", \"white\")\n\t\t\t  .style(\"font\", \"10px roboto\")\n\t\t\t  .text(\"Hue\");\n\t\t\tbar.append(\"text\") \n\t\t\t  .attr(\"class\", \"axis\")     \t\t\t\n\t\t\t  .attr(\"transform\", \"rotate(-90)\")\t\n\t\t\t  .attr(\"y\", -30)\n\t\t\t  .attr(\"x\", -70)\n\t\t\t  .style(\"text-anchor\", \"middle\")\n\t\t\t  .style(\"fill\", \"white\")\n\t\t\t  .style(\"font\", \"10px roboto\")\n\t\t\t  .text(\"Frequency\");\n\t\t\tbar.append(\"text\")    \t\t\t\n\t\t\t  .attr(\"transform\",\n\t\t\t\t\t\"translate(\" + -20 + \" ,\" + -40 + \")\")\n\t\t\t  .style(\"fill\", \"white\")\n\t\t\t  .style(\"font\", \"14px roboto slab\")\n\t\t\t  .style(\"font-weight\",\"bold\")\n\t\t\t  .text(selected.artist_name.concat(\"'s Overall Color Usage\"));\n\t\t\tbar.selectAll(\"rect\")\n\t\t\t  .data(bins)\n\t\t\t  .enter()\n\t\t\t  .append(\"rect\")\n\t\t\t\t.attr('class', 'bars')\n\t\t\t\t.attr(\"x\", 1)\n\t\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n\t\t\t\t.attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n\t\t\t\t.attr(\"height\", function(d) { return barh - y(d.length); })\n\t\t\t\t.style(\"fill\", \"rgba(255,255,255,0.6)\")\n\t\t\t\t\n\t\t\tvar current = \"Hue\";\n\t\t\tbar.append('g')\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t.attr(\"id\",\"hue\")\n\t\t\t\t.attr('x', 0)\n\t\t\t\t.attr('y', -20)\n\t\t\t\t.text('Hue')\n\t\t\t\t.style(\"fill\", \"#fc766a\")\n\t\t\t\t.style(\"font-size\", 12)\n\t\t\t\t.style(\"text-decoration\",\"underline\")\n\t\t\t\t.on(\"click\", function(d) { updateBar(harr, \"Hue\");});\n\t\t\tbar.append('g')\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t.attr(\"id\",\"saturation\")\n\t\t\t\t.attr('x', 50)\n\t\t\t\t.attr('y', -20)\n\t\t\t\t.text(\"Saturation\")\n\t\t\t\t.style(\"fill\", 'white')\n\t\t\t\t.style(\"font-size\", 12)\n\t\t\t\t.style(\"text-decoration\",\"underline\")\n\t\t\t\t.on(\"click\", function(d) { updateBar(sarr, \"Saturation\"); });\n\t\t\tbar.append('g')\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t.attr(\"id\",\"value\")\n\t\t\t\t.attr('x', 130)\n\t\t\t\t.attr('y', -20)\n\t\t\t\t.text('Value')\n\t\t\t\t.style(\"fill\", 'white')\n\t\t\t\t.style(\"font-size\", 12)\n\t\t\t\t.style(\"text-decoration\",\"underline\")\n\t\t\t\t.on(\"click\", function(d) { updateBar(varr, \"Value\"); });\n\t\t\tbar.append(\"svg:image\")\n\t\t\t\t.attr(\"class\", \"axis\")\n\t\t\t\t.attr('xlink:href', 'hue-bar-256.png')\n\t\t\t\t.attr('transform', 'translate('+[1, 149]+')')\n\t\t\t\t// .style('width', 250)\n\t\t\t\t// .style('height', 20)\n\t\t\t\t.attr(\"width\", \"250px\")\n\t\t\t\t.attr(\"height\", \"20px\")\n\t\t\t\t.style(\"opacity\", 0.6);\n\t\t\td3.select(\"#x\").style(\"display\",\"none\");\n\t\t\t\t\n\t\t\tfunction updateBar(data, select){\n\t\t\t\tconsole.log(select);\n\t\t\t\tbar.selectAll(\".axis\").remove();\n\t\t\t\tbar.selectAll(\".axiswhite\").remove();\n\t\t\t\tbar.selectAll(\".bars\").remove();\n\t\t\t\tvar x = d3.scaleLinear();\n\t\t\t\tif (select == \"Hue\"){\n\t\t\t\t\td3.select(\"#hue\")\n\t\t\t\t\t\t.style(\"fill\", \"#fc766a\");\n\t\t\t\t\td3.select(\"#saturation\")\n\t\t\t\t\t\t.style(\"fill\", \"white\");\n\t\t\t\t\td3.select(\"#value\")\n\t\t\t\t\t\t.style(\"fill\", \"white\");\n\t\t\t\t\tx.domain([0, 360]);\n\t\t\t\t\tx.range([0, barw]);\n\t\t\t\t}else if (select == \"Saturation\"){\n\t\t\t\t\td3.select(\"#saturation\")\n\t\t\t\t\t\t.style(\"fill\", \"#fc766a\");\n\t\t\t\t\td3.select(\"#hue\")\n\t\t\t\t\t\t.style(\"fill\", \"white\");\n\t\t\t\t\td3.select(\"#value\")\n\t\t\t\t\t\t.style(\"fill\", \"white\");\n\t\t\t\t\tx.domain([0, 1]);\n\t\t\t\t\tx.range([0, barw]);\n\t\t\t\t}else if (select == \"Value\"){\n\t\t\t\t\td3.select(\"#value\")\n\t\t\t\t\t\t.style(\"fill\", \"#fc766a\");\n\t\t\t\t\td3.select(\"#saturation\")\n\t\t\t\t\t\t.style(\"fill\", \"white\");\n\t\t\t\t\td3.select(\"#hue\")\n\t\t\t\t\t\t.style(\"fill\", \"white\");\n\t\t\t\t\tx.domain([0, 1]);\n\t\t\t\t\tx.range([0, barw]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbar.append(\"g\")\n\t\t\t\t\t.attr(\"id\",\"x\")\n\t\t\t\t\t.attr(\"class\", \"axiswhite\")\n\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + barh + \")\")\n\t\t\t\t\t.call(d3.axisBottom(x))\n\t\t\t\t\t.style(\"line-stroke\",\"white\");\n\n\t\t\t\tvar histogram = d3.histogram()\n\t\t\t\t\t.value(function(d) { return d; })\n\t\t\t\t\t.domain(x.domain())\n\t\t\t\t\t.thresholds(x.ticks(40)); \n\t\t\t\tvar formatPercent = d3.format(\".0%\");\n\t\t\t\tvar bins = histogram(data);\n\t\t\t\tvar y = d3.scaleLinear()\n\t\t\t\t\t.range([barh, 0])\n\t\t\t\t\t.domain([0, d3.max(bins, function(d) { return d.length; })]); \n\t\t\t\tbar.append(\"g\")\n\t\t\t\t  .attr(\"class\", \"axiswhite\")\n\t\t\t\t  .call(d3.axisLeft(y));\n\t\t\t\tbar.append(\"text\") \n\t\t\t\t  .attr(\"class\", \"axis\") \t\t\t\t\t\n\t\t\t\t  .attr(\"transform\",\n\t\t\t\t\t\t\"translate(\" + 120 + \" ,\" + 180 + \")\")\n\t\t\t\t  .style(\"text-anchor\", \"middle\")\n\t\t\t\t  .style(\"fill\", \"white\")\n\t\t\t\t  .style(\"font\", \"10px roboto\")\n\t\t\t\t  .text(select);\n\t\t\t\t  \n\t\t\t\tif(select == \"Hue\"){\n\t\t\t\t\tbar.append(\"svg:image\")\n\t\t\t\t\t\t.attr(\"class\", \"axis\")\n\t\t\t\t\t\t.attr('xlink:href', 'hue-bar-256.png')\n\t\t\t\t\t\t.attr('transform', 'translate('+[1, 149]+')')\n\t\t\t\t\t\t.style('width', 250)\n\t\t\t\t\t\t.style('height', 20)\n\t\t\t\t\td3.select(\"#x\").style(\"display\",\"none\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbar.append(\"text\")  \n\t\t\t\t  .attr(\"class\", \"axis\") \n\t\t\t\t  .attr(\"transform\", \"rotate(-90)\")\t\n\t\t\t\t  .attr(\"y\", -30)\n\t\t\t\t  .attr(\"x\", -70)\n\t\t\t\t  .style(\"text-anchor\", \"middle\")\n\t\t\t\t  .style(\"fill\", \"white\")\n\t\t\t\t  .style(\"font\", \"10px roboto\")\n\t\t\t\t  .text(\"Frequency\");\n\t\t\t\tbar.selectAll(\"rect\")\n\t\t\t\t  .data(bins)\n\t\t\t\t  .enter()\n\t\t\t\t  .append(\"rect\")\n\t\t\t\t\t.attr(\"class\", \"bars\") \n\t\t\t\t\t.attr(\"x\", 1)\n\t\t\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n\t\t\t\t\t.attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n\t\t\t\t\t.attr(\"height\", function(d) { return barh - y(d.length); })\n\t\t\t\t\t.style(\"fill\", \"rgba(255,255,255,0.6)\")\n\t\t\t\t}\n\t\t\t}\n    }\n}\n</script>\n\n<style>\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  padding-top: 0px; /* Location of the box */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n  background-color: none;\n  margin: auto;\n  padding: 0px;\n  width: 100%;\n  height: 100%;\n}\n</style>\n"]}]}